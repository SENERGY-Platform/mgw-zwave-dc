package tests

import (
	"context"
	paho "github.com/eclipse/paho.mqtt.golang"
	"log"
	"sync"
	"testing"
	"time"
	"zwave2mqtt-connector/lib"
	"zwave2mqtt-connector/lib/configuration"
	"zwave2mqtt-connector/lib/connector"
	"zwave2mqtt-connector/lib/tests/docker"
)

func TestConnector(t *testing.T) {
	config, err := configuration.Load("../../config.json")
	if err != nil {
		t.Error(err)
		return
	}

	config.ZwaveNetworkEventsTopic = "zwave2mqtt/_EVENTS/ZWAVE_GATEWAY-SENERGY"

	t.Run("missing devices offline", func(t *testing.T) {
		c2 := config
		c2.DeleteMissingDevices = false
		c2.Debug = false
		c2.DeleteHusks = false
		t.Run("run", testConnector(c2))
	})

	t.Run("missing devices delete", func(t *testing.T) {
		c2 := config
		c2.DeleteMissingDevices = true
		c2.Debug = false
		c2.DeleteHusks = false
		c2.ZwaveNetworkEventsTopic = "-"
		t.Run("run", testConnector(c2))
	})

	t.Run("missing devices offline husks delete", func(t *testing.T) {
		c2 := config
		c2.DeleteMissingDevices = false
		c2.Debug = false
		c2.DeleteHusks = true
		t.Run("run", testConnector(c2))
	})

	t.Run("missing devices delete husks delete", func(t *testing.T) {
		c2 := config
		c2.DeleteMissingDevices = true
		c2.Debug = false
		c2.DeleteHusks = true
		c2.ZwaveNetworkEventsTopic = "-"
		t.Run("run", testConnector(c2))
	})
}

func testConnector(config configuration.Config) func(t *testing.T) {
	return func(t *testing.T) {
		wg := &sync.WaitGroup{}
		defer wg.Wait()
		ctx, cancel := context.WithCancel(context.Background())
		defer cancel()

		config.ZvaveValueEventTopic = "zwave2mqtt/#"
		config.ZwaveMqttApiTopic = "zwave2mqtt/_CLIENTS/ZWAVE_GATEWAY-SENERGY/api"

		mgwMqttPort, _, err := docker.Mqtt(ctx, wg)
		if err != nil {
			t.Error(err)
			return
		}
		config.MgwMqttBroker = "tcp://localhost:" + mgwMqttPort
		config.MgwMqttUser = ""
		config.MgwMqttPw = ""
		config.MgwMqttClientId = "connector-mgw"

		zwaveMqttPort, _, err := docker.Mqtt(ctx, wg)
		if err != nil {
			t.Error(err)
			return
		}
		config.ZwaveMqttBroker = "tcp://localhost:" + zwaveMqttPort
		config.ZwaveMqttUser = ""
		config.ZwaveMqttPw = ""
		config.ZwaveMqttClientId = "connector-zwave"

		config.UpdatePeriod = ""
		config.ConnectorId = "test-connector-id"
		config.DeviceTypeMapping = map[string]string{
			"0x0371.0x0002.881-7-2": "test-device-type",
		}

		c, err := lib.New(config, ctx)
		if err != nil {
			t.Error(err)
			return
		}

		mgwmqttclient := paho.NewClient(paho.NewClientOptions().
			SetAutoReconnect(true).
			SetCleanSession(false).
			SetClientID("test-client-mgw").
			AddBroker(config.MgwMqttBroker))
		if token := mgwmqttclient.Connect(); token.Wait() && token.Error() != nil {
			log.Println("Error on Mqtt.Connect(): ", token.Error())
			t.Error(err)
			return
		}
		defer mgwmqttclient.Disconnect(0)

		zwavemqttclient := paho.NewClient(paho.NewClientOptions().
			SetAutoReconnect(true).
			SetCleanSession(false).
			SetClientID("test-client-zwave").
			AddBroker(config.ZwaveMqttBroker))
		if token := zwavemqttclient.Connect(); token.Wait() && token.Error() != nil {
			log.Println("Error on Mqtt.Connect(): ", token.Error())
			t.Error(err)
			return
		}
		defer zwavemqttclient.Disconnect(0)

		t.Run("device-management", deviceManagementTest(c, mgwmqttclient, zwavemqttclient, config.DeleteMissingDevices, config.DeleteHusks))
		t.Run("command", testCommands(c, mgwmqttclient, zwavemqttclient))
		t.Run("event", testEvents(c, mgwmqttclient, zwavemqttclient))
	}
}

func deviceManagementTest(c *connector.Connector, mgwmqttclient paho.Client, zwavemqttclient paho.Client, deleteMissingDevices bool, deleteHusks bool) func(t *testing.T) {
	return func(t *testing.T) {
		t.Run("check update trigger", checkUpdateTrigger(c, mgwmqttclient, zwavemqttclient))
		t.Run("check update result", checkUpdateResult(c, mgwmqttclient, zwavemqttclient, deleteHusks))
		t.Run("check update result after remove", checkUpdateResultAfterRemove(c, mgwmqttclient, zwavemqttclient, deleteMissingDevices, deleteHusks))
	}
}

func testCommands(c *connector.Connector, mgwmqttclient paho.Client, zwavemqttclient paho.Client) func(t *testing.T) {
	return func(t *testing.T) {
		t.Run("get", testGetCommand(c, mgwmqttclient, zwavemqttclient))
		t.Run("set", testSetCommand(c, mgwmqttclient, zwavemqttclient))
	}
}

func testEvents(c *connector.Connector, mgwmqttclient paho.Client, zwavemqttclient paho.Client) func(t *testing.T) {
	return func(t *testing.T) {
		//check event
		eventTopic := "event/test-connector-id:3/113-1-6:get"
		eventDone, eventReceived := context.WithTimeout(context.Background(), 10*time.Second)
		token := mgwmqttclient.Subscribe(eventTopic, 2, func(_ paho.Client, message paho.Message) {
			defer eventReceived()
			expectedMsg := `{"value":"Door/Window Closed","lastUpdate":1611656048685}`
			if string(message.Payload()) != expectedMsg {
				t.Error(string(message.Payload()), "\n", expectedMsg)
				return
			}
		})
		if token.Wait() && token.Error() != nil {
			t.Error(token.Error())
			return
		}
		defer zwavemqttclient.Unsubscribe(eventTopic)

		//trigger event
		token = zwavemqttclient.Publish("zwave2mqtt/Test/alarm/access_control", 2, false, `{"value_id":"3-113-1-6","node_id":3,"class_id":113,"type":"list","genre":"user","instance":1,"index":6,"label":"Access Control","units":"","help":"Access Control Alerts","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Clear","Door/Window Open","Door/Window Closed"],"value":"Door/Window Closed","lastUpdate":1611656048685}`)
		if token.Wait() && token.Error() != nil {
			t.Error(token.Error())
			return
		}

		<-eventDone.Done()
		if err := eventDone.Err(); err != nil && err != context.Canceled {
			t.Error("no update request received", err)
		}
	}
}

func checkUpdateTrigger(c *connector.Connector, mgwmqttclient paho.Client, zwavemqttclient paho.Client) func(t *testing.T) {
	return func(t *testing.T) {
		//check update request
		requestTopic := "zwave2mqtt/_CLIENTS/ZWAVE_GATEWAY-SENERGY/api/getNodes/set"
		requestDone, requestReceived := context.WithTimeout(context.Background(), 10*time.Second)
		token := zwavemqttclient.Subscribe(requestTopic, 2, func(_ paho.Client, message paho.Message) {
			defer requestReceived()
			expectedMsg := `{"args":[]}`
			if string(message.Payload()) != expectedMsg {
				t.Error(string(message.Payload()), "\n", expectedMsg)
				return
			}
		})
		if token.Wait() && token.Error() != nil {
			t.Error(token.Error())
			return
		}
		defer zwavemqttclient.Unsubscribe(requestTopic)

		//trigger update
		token = mgwmqttclient.Publish("device-manager/refresh", 2, false, "1")
		if token.Wait() && token.Error() != nil {
			t.Error(token.Error())
			return
		}

		<-requestDone.Done()
		if err := requestDone.Err(); err != nil && err != context.Canceled {
			t.Error("no update request received", err)
		}
	}
}

//expects previous run of checkUpdateResult() or checkUpdateResultAfterRemove()
func testGetCommand(c *connector.Connector, mgwmqttclient paho.Client, zwavemqttclient paho.Client) func(t *testing.T) {
	return func(t *testing.T) {
		//check update request
		responseTopic := "response/test-connector-id:3/113-1-6:get"
		requestDone, requestReceived := context.WithTimeout(context.Background(), 10*time.Second)
		token := mgwmqttclient.Subscribe(responseTopic, 2, func(_ paho.Client, message paho.Message) {
			defer requestReceived()
			expectedMsg := `{"command_id":"commandId","data":"{\"value\":\"Door/Window Closed\",\"lastUpdate\":1611656048685}"}`
			if string(message.Payload()) != expectedMsg {
				t.Error(string(message.Payload()), "\n", expectedMsg)
				return
			}
		})
		if token.Wait() && token.Error() != nil {
			t.Error(token.Error())
			return
		}
		defer zwavemqttclient.Unsubscribe(responseTopic)

		//trigger update
		token = mgwmqttclient.Publish("command/test-connector-id:3/113-1-6:get", 2, false, `{"command_id": "commandId", "data": ""}`)
		if token.Wait() && token.Error() != nil {
			t.Error(token.Error())
			return
		}

		<-requestDone.Done()
		if err := requestDone.Err(); err != nil && err != context.Canceled {
			t.Error("no update request received", err)
		}
	}
}

func testSetCommand(c *connector.Connector, mgwmqttclient paho.Client, zwavemqttclient paho.Client) func(t *testing.T) {
	return func(t *testing.T) {
		//check response
		responseTopic := "response/test-connector-id:3/67-1-1"
		requestDone, requestReceived := context.WithTimeout(context.Background(), 10*time.Second)
		token := mgwmqttclient.Subscribe(responseTopic, 2, func(_ paho.Client, message paho.Message) {
			defer requestReceived()
			expectedMsg := `{"command_id":"commandId-2","data":""}`
			if string(message.Payload()) != expectedMsg {
				t.Error(string(message.Payload()), "\n", expectedMsg)
				return
			}
		})
		if token.Wait() && token.Error() != nil {
			t.Error(token.Error())
			return
		}
		defer mgwmqttclient.Unsubscribe(responseTopic)

		//check message to zwave
		execTopic := "zwave2mqtt/_CLIENTS/ZWAVE_GATEWAY-SENERGY/api/setValue/set"
		execDone, execReceived := context.WithTimeout(context.Background(), 10*time.Second)
		token = zwavemqttclient.Subscribe(execTopic, 2, func(_ paho.Client, message paho.Message) {
			defer execReceived()
			expectedMsg := `{"args":[3,67,1,1,42]}`
			if string(message.Payload()) != expectedMsg {
				t.Error(string(message.Payload()), "\n", expectedMsg)
				return
			}
		})
		if token.Wait() && token.Error() != nil {
			t.Error(token.Error())
			return
		}
		defer zwavemqttclient.Unsubscribe(execTopic)

		//send command
		token = mgwmqttclient.Publish("command/test-connector-id:3/67-1-1", 2, false, `{"command_id": "commandId-2", "data": "42"}`)
		if token.Wait() && token.Error() != nil {
			t.Error(token.Error())
			return
		}

		<-requestDone.Done()
		if err := requestDone.Err(); err != nil && err != context.Canceled {
			t.Error("no response received", err)
		}

		<-execDone.Done()
		if err := execDone.Err(); err != nil && err != context.Canceled {
			t.Error("no exec request received", err)
		}
	}
}

func checkUpdateResult(connector *connector.Connector, mgwmqttclient paho.Client, zwavemqttclient paho.Client, deleteHusks bool) func(t *testing.T) {
	return func(t *testing.T) {
		//check update
		deviceInfoTopic := "device-manager/device/test-connector-id"
		deviceInfoDone, allDeviceInfosReceived := context.WithTimeout(context.Background(), 10*time.Second)
		wg1 := sync.WaitGroup{}
		wg1.Add(1)
		wg2 := sync.WaitGroup{}
		wg2.Add(1)
		wg3 := sync.WaitGroup{}
		if deleteHusks {
			wg3.Add(1)
		}
		go func() {
			wg1.Wait()
			wg2.Wait()
			wg3.Wait()
			allDeviceInfosReceived()
		}()
		token := mgwmqttclient.Subscribe(deviceInfoTopic, 2, func(_ paho.Client, message paho.Message) {
			expectedMsg1 := `{"method":"set","device_id":"test-connector-id:3","data":{"name":"Test","state":"online","device_type":"test-device-type"}}`
			expectedMsg2 := `{"method":"set","device_id":"test-connector-id:4","data":{"name":"ZWA008 Door Window Sensor 7 (4)","state":"online","device_type":"test-device-type"}}`
			expectedMsg3 := `{"method":"delete","device_id":"test-connector-id:2","data":{"name":"","state":"","device_type":""}}`

			switch string(message.Payload()) {
			case expectedMsg1:
				wg1.Done()
			case expectedMsg2:
				wg2.Done()
			case expectedMsg3:
				if deleteHusks {
					wg3.Done()
				}
				if !deleteHusks {
					t.Error("unexpected husk delete")
				}
			default:
				t.Error(string(message.Payload()))
				return
			}
		})
		if token.Wait() && token.Error() != nil {
			t.Error(token.Error())
			return
		}
		defer mgwmqttclient.Unsubscribe(deviceInfoTopic)

		//send update
		updatePayload := `{"success":true,"message":"Success zwave api call","result":[{"node_id":0,"type":"Main controller","status":"","name":"","loc":"","failed":true,"values":{}},{"node_id":1,"device_id":"134-90-1","manufacturer":"AEON Labs","manufacturerid":"0x0086","product":"ZW090 Z-Stick Gen5 EU","producttype":"0x0001","productid":"0x005a","type":"Static PC Controller","values":{"32-1-0":{"value_id":"1-32-1-0","node_id":1,"class_id":32,"type":"byte","genre":"basic","instance":1,"index":0,"label":"Basic","units":"","help":"Basic status of the node","read_only":true,"write_only":false,"min":0,"max":255,"is_polled":false,"value":0,"lastUpdate":1611654895645},"32-1-1":{"value_id":"1-32-1-1","node_id":1,"class_id":32,"type":"byte","genre":"basic","instance":1,"index":1,"label":"Basic Target","units":"","help":"","read_only":true,"write_only":false,"min":0,"max":255,"is_polled":false,"value":0,"lastUpdate":1611654895646},"32-1-2":{"value_id":"1-32-1-2","node_id":1,"class_id":32,"type":"int","genre":"basic","instance":1,"index":2,"label":"Basic Duration","units":"","help":"","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":0,"lastUpdate":1611654895646},"112-1-81":{"value_id":"1-112-1-81","node_id":1,"class_id":112,"type":"list","genre":"config","instance":1,"index":81,"label":"LED indicator configuration","units":"","help":"Enable/Disable LED indicator when plugged in","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Disable","Enable"],"value":"Enable","lastUpdate":1611654895646},"112-1-220":{"value_id":"1-112-1-220","node_id":1,"class_id":112,"type":"list","genre":"config","instance":1,"index":220,"label":"Configuration of the RF power level","units":"","help":"1~10, other= ignore. A total of 10 levels, level 1 as the weak output power, and so on, 10 for most output power level","read_only":false,"write_only":false,"min":1,"max":10,"is_polled":false,"values":["1","2","3","4","5","6","7","8","9","10"],"value":"10","lastUpdate":1611654895647},"112-1-242":{"value_id":"1-112-1-242","node_id":1,"class_id":112,"type":"list","genre":"config","instance":1,"index":242,"label":"Security network enabled","units":"","help":"","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Disable","Enable"],"value":"Disable","lastUpdate":1611654895647},"112-1-243":{"value_id":"1-112-1-243","node_id":1,"class_id":112,"type":"int","genre":"config","instance":1,"index":243,"label":"Security network key","units":"","help":"","read_only":false,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":0,"lastUpdate":1611654895647},"112-1-252":{"value_id":"1-112-1-252","node_id":1,"class_id":112,"type":"list","genre":"config","instance":1,"index":252,"label":"Lock/Unlock Configuration","units":"","help":"Lock/ unlock all configuration parameters","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Unlock","Lock"],"value":"Unlock","lastUpdate":1611654895647},"112-1-255":{"value_id":"1-112-1-255","node_id":1,"class_id":112,"type":"int","genre":"config","instance":1,"index":255,"label":"Reset default configuration","units":"","help":"Reset to the default configuration","read_only":false,"write_only":true,"min":-2147483648,"max":2147483647,"is_polled":false,"value":0,"lastUpdate":1611654895647},"114-1-0":{"value_id":"1-114-1-0","node_id":1,"class_id":114,"type":"int","genre":"system","instance":1,"index":0,"label":"Loaded Config Revision","units":"","help":"Revision of the Config file currently loaded","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":6,"lastUpdate":1611654895648},"114-1-1":{"value_id":"1-114-1-1","node_id":1,"class_id":114,"type":"int","genre":"system","instance":1,"index":1,"label":"Config File Revision","units":"","help":"Revision of the Config file on the File System","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":6,"lastUpdate":1611654895648},"114-1-2":{"value_id":"1-114-1-2","node_id":1,"class_id":114,"type":"int","genre":"system","instance":1,"index":2,"label":"Latest Available Config File Revision","units":"","help":"Latest Revision of the Config file available for download","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":6,"lastUpdate":1611654895648}},"groups":[],"neighborns":[3,4,5],"ready":true,"available":true,"hassDevices":{},"failed":false,"lastActive":1611654895645,"status":"Alive","basic_device_class":2,"generic_device_class":2,"specific_device_class":1},{"node_id":2,"type":"","status":"Removed","name":"","loc":"","failed":true,"values":{}},{"node_id":3,"device_id":"881-7-2","manufacturer":"Aeotec Limited","manufacturerid":"0x0371","product":"ZWA008 Door Window Sensor 7","producttype":"0x0002","productid":"0x0007","type":"Access Control Sensor","name":"Test","values":{"32-1-0":{"value_id":"3-32-1-0","node_id":3,"class_id":32,"type":"byte","genre":"basic","instance":1,"index":0,"label":"Basic","units":"","help":"Basic status of the node","read_only":true,"write_only":false,"min":0,"max":255,"is_polled":false,"value":0,"lastUpdate":1611655806624},"32-1-1":{"value_id":"3-32-1-1","node_id":3,"class_id":32,"type":"byte","genre":"basic","instance":1,"index":1,"label":"Basic Target","units":"","help":"","read_only":true,"write_only":false,"min":0,"max":255,"is_polled":false,"value":0,"lastUpdate":1611655806624},"32-1-2":{"value_id":"3-32-1-2","node_id":3,"class_id":32,"type":"int","genre":"basic","instance":1,"index":2,"label":"Basic Duration","units":"","help":"","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":0,"lastUpdate":1611655806624},"48-1-0":{"value_id":"3-48-1-0","node_id":3,"class_id":48,"type":"bool","genre":"user","instance":1,"index":0,"label":"Sensor","units":"","help":"Binary Sensor State","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":false,"lastUpdate":1611655806625},"91-1-1":{"value_id":"3-91-1-1","node_id":3,"class_id":91,"type":"list","genre":"user","instance":1,"index":1,"label":"Scene 1","units":"","help":"","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Inactive","Pressed 1 Time","Key Released","Key Held down","Pressed 2 Times","Pressed 3 Times","Pressed 4 Times","Pressed 5 Times"],"value":"Inactive","lastUpdate":1611655806625},"91-1-256":{"value_id":"3-91-1-256","node_id":3,"class_id":91,"type":"int","genre":"user","instance":1,"index":256,"label":"Scene Count","units":"","help":"","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":1,"lastUpdate":1611655806625},"91-1-257":{"value_id":"3-91-1-257","node_id":3,"class_id":91,"type":"int","genre":"config","instance":1,"index":257,"label":"Scene Reset Timeout","units":"","help":"","read_only":false,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":1000,"lastUpdate":1611655806625},"94-1-0":{"value_id":"3-94-1-0","node_id":3,"class_id":94,"type":"byte","genre":"system","instance":1,"index":0,"label":"ZWave+ Version","units":"","help":"ZWave+ Version Supported on the Device","read_only":true,"write_only":false,"min":0,"max":255,"is_polled":false,"value":1,"lastUpdate":1611655806625},"94-1-1":{"value_id":"3-94-1-1","node_id":3,"class_id":94,"type":"short","genre":"system","instance":1,"index":1,"label":"InstallerIcon","units":"","help":"Icon File to use for the Installer Application","read_only":true,"write_only":false,"min":-32768,"max":32767,"is_polled":false,"value":3072,"lastUpdate":1611655806625},"94-1-2":{"value_id":"3-94-1-2","node_id":3,"class_id":94,"type":"short","genre":"system","instance":1,"index":2,"label":"UserIcon","units":"","help":"Icon File to use for the User Application","read_only":true,"write_only":false,"min":-32768,"max":32767,"is_polled":false,"value":3078,"lastUpdate":1611655806625},"112-1-1":{"value_id":"3-112-1-1","node_id":3,"class_id":112,"type":"list","genre":"config","instance":1,"index":1,"label":"Operation mode","units":"","help":"Parameter defines device operation mode.","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Built-in hall sensor","External Input"],"value":"Built-in hall sensor","lastUpdate":1611655806626},"112-1-2":{"value_id":"3-112-1-2","node_id":3,"class_id":112,"type":"list","genre":"config","instance":1,"index":2,"label":"Door/Window or alarm status","units":"","help":"Parameter defines state of the sensor when the magnet is close. If the alarm sensor is connected, it determines the output type. Parameter inactive in external button mode (parameter Operation Mode set to 1).","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Closed","Opened"],"value":"Closed","lastUpdate":1611655806626},"112-1-3":{"value_id":"3-112-1-3","node_id":3,"class_id":112,"type":"byte","genre":"config","instance":1,"index":3,"label":"Visual LED indications","units":"","help":"This parameter defines events indicated by the visual LED indicator. Disabling events might extend battery life. Values of parameters may be combined, e.g. 1+2=3 means opening/closing and wake up will be indicated by the visual indicator. 0 - No indications. 1 - Indication of opening/closing status change (input In). 2 - Indication of wake up (1 x click or periodical). 4 - Indication of device tampering.","read_only":false,"write_only":false,"min":0,"max":7,"is_polled":false,"value":7,"lastUpdate":1611655806626},"112-1-4":{"value_id":"3-112-1-4","node_id":3,"class_id":112,"type":"list","genre":"config","instance":1,"index":4,"label":"Range test after double click","units":"","help":"Allows to enable activation of Z-Wave range test with double click of a Tamper Switch 2.","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Disable","Enable"],"value":"Disable","lastUpdate":1611655806626},"112-1-5":{"value_id":"3-112-1-5","node_id":3,"class_id":112,"type":"list","genre":"config","instance":1,"index":5,"label":"2nd Association Group triggers","units":"","help":"Parameter defines events which result in sending On/Off commands to devices added to the 2nd Association Group. These commands are sent alternately to switch the devices On and Off. Commands represent the values of BASIC SET command frames. Parameter is inactive in external dry-contact mode (parameter Operation Mode set to 1).","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Switch after opening and closing","Switch after opening","Switch after closing"],"value":"Switch after opening and closing","lastUpdate":1611655806626},"112-1-6":{"value_id":"3-112-1-6","node_id":3,"class_id":112,"type":"list","genre":"config","instance":1,"index":6,"label":"Commands sent to 2nd Association Group","units":"","help":"Command frames sent to devices added to the 2nd association group.","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["On","Off","On and Off"],"value":"On and Off","lastUpdate":1611655806626},"112-1-7":{"value_id":"3-112-1-7","node_id":3,"class_id":112,"type":"byte","genre":"config","instance":1,"index":7,"label":"Value of ON command frame sent to 2nd Association Group","units":"","help":"The value of 0 turns OFF the device, 255 turns it On. In case of associating the Dimmer or Roller Shutter module, values 1-99 allow to set an Associated device to a specified level.","read_only":false,"write_only":false,"min":0,"max":255,"is_polled":false,"value":255,"lastUpdate":1611655806626},"112-1-8":{"value_id":"3-112-1-8","node_id":3,"class_id":112,"type":"byte","genre":"config","instance":1,"index":8,"label":"Value of OFF command frame sent to 2nd Association Group","units":"","help":"The value of 0 turns OFF the device, 255 turns it On. In case of associating the Dimmer or Roller Shutter module, values 1-99 allow to set an Associated device to a specified level.","read_only":false,"write_only":false,"min":0,"max":255,"is_polled":false,"value":0,"lastUpdate":1611655806627},"112-1-9":{"value_id":"3-112-1-9","node_id":3,"class_id":112,"type":"short","genre":"config","instance":1,"index":9,"label":"Time delay of ON command frame","units":"seconds","help":"Time period after which On command frame will be sent.","read_only":false,"write_only":false,"min":0,"max":32400,"is_polled":false,"value":0,"lastUpdate":1611655806627},"112-1-10":{"value_id":"3-112-1-10","node_id":3,"class_id":112,"type":"short","genre":"config","instance":1,"index":10,"label":"Time delay of OFF command frame","units":"seconds","help":"Time period after which Off command frame will be sent.","read_only":false,"write_only":false,"min":0,"max":32400,"is_polled":false,"value":0,"lastUpdate":1611655806627},"112-1-11":{"value_id":"3-112-1-11","node_id":3,"class_id":112,"type":"short","genre":"config","instance":1,"index":11,"label":"Delay of tamper alarm cancellation","units":"seconds","help":"Time period after which a tamper alarm will be cancelled.","read_only":false,"write_only":false,"min":0,"max":32400,"is_polled":false,"value":5,"lastUpdate":1611655806627},"112-1-12":{"value_id":"3-112-1-12","node_id":3,"class_id":112,"type":"list","genre":"config","instance":1,"index":12,"label":"Reporting tamper alarm cancellation","units":"","help":"Reporting cancellation of tamper alarm to the controller and 5th Association Group.","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Do not send tamper cancellation report","Send tamper cancellation report"],"value":"Send tamper cancellation report","lastUpdate":1611655806627},"112-1-13":{"value_id":"3-112-1-13","node_id":3,"class_id":112,"type":"list","genre":"config","instance":1,"index":13,"label":"Scene activation functionality","units":"","help":"The device can trigger scenes via Dry Input Terminal (external contact) using scene IDs assigned to different events.","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Disable","Enable"],"value":"Disable","lastUpdate":1611655806627},"112-1-14":{"value_id":"3-112-1-14","node_id":3,"class_id":112,"type":"list","genre":"config","instance":1,"index":14,"label":"Tilt Sensor functionality","units":"","help":"The device can report Tilt Window events. This functionality can be disabled if the device is mounted on a door or windows without tilt functionality.To disable tilt detection set the value to 0.","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Disable","Enable"],"value":"Enable","lastUpdate":1611655806627},"113-1-6":{"value_id":"3-113-1-6","node_id":3,"class_id":113,"type":"list","genre":"user","instance":1,"index":6,"label":"Access Control","units":"","help":"Access Control Alerts","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Clear","Door/Window Open","Door/Window Closed"],"value":"Door/Window Closed","lastUpdate":1611656048685},"113-1-7":{"value_id":"3-113-1-7","node_id":3,"class_id":113,"type":"list","genre":"user","instance":1,"index":7,"label":"Home Security","units":"","help":"Home Security Alerts","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Clear","Tampering -  Cover Removed"],"value":"Tampering -  Cover Removed","lastUpdate":1611655890618},"113-1-256":{"value_id":"3-113-1-256","node_id":3,"class_id":113,"type":"byte","genre":"user","instance":1,"index":256,"label":"Previous Event Cleared","units":"","help":"Previous Event that was sent","read_only":true,"write_only":false,"min":0,"max":255,"is_polled":false,"value":3,"lastUpdate":1611655806628},"114-1-0":{"value_id":"3-114-1-0","node_id":3,"class_id":114,"type":"int","genre":"system","instance":1,"index":0,"label":"Loaded Config Revision","units":"","help":"Revision of the Config file currently loaded","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":1,"lastUpdate":1611655806628},"114-1-1":{"value_id":"3-114-1-1","node_id":3,"class_id":114,"type":"int","genre":"system","instance":1,"index":1,"label":"Config File Revision","units":"","help":"Revision of the Config file on the File System","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":1,"lastUpdate":1611655806628},"114-1-2":{"value_id":"3-114-1-2","node_id":3,"class_id":114,"type":"int","genre":"system","instance":1,"index":2,"label":"Latest Available Config File Revision","units":"","help":"Latest Revision of the Config file available for download","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":1,"lastUpdate":1611655806628},"114-1-4":{"value_id":"3-114-1-4","node_id":3,"class_id":114,"type":"string","genre":"system","instance":1,"index":4,"label":"Serial Number","units":"","help":"Device Serial Number","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":"311306ae4dac6ffa0001ffff","lastUpdate":1611655806628},"115-1-0":{"value_id":"3-115-1-0","node_id":3,"class_id":115,"type":"list","genre":"system","instance":1,"index":0,"label":"Powerlevel","units":"dB","help":"Output RF PowerLevel","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Normal","-1dB","-2dB","-3dB","-4dB","-5dB","-6dB","-7dB","-8dB","-9dB"],"value":"Normal","lastUpdate":1611655806629},"115-1-1":{"value_id":"3-115-1-1","node_id":3,"class_id":115,"type":"byte","genre":"system","instance":1,"index":1,"label":"Timeout","units":"seconds","help":"Timeout till the PowerLevel is reset to Normal","read_only":false,"write_only":false,"min":0,"max":255,"is_polled":false,"value":0,"lastUpdate":1611655806629},"115-1-2":{"value_id":"3-115-1-2","node_id":3,"class_id":115,"type":"button","genre":"system","instance":1,"index":2,"label":"Set Powerlevel","units":"","help":"Apply the Output PowerLevel and Timeout Values","read_only":false,"write_only":true,"min":0,"max":0,"is_polled":false,"lastUpdate":1611655806629},"115-1-3":{"value_id":"3-115-1-3","node_id":3,"class_id":115,"type":"byte","genre":"system","instance":1,"index":3,"label":"Test Node","units":"","help":"Node to Perform a test against","read_only":false,"write_only":false,"min":0,"max":255,"is_polled":false,"value":0,"lastUpdate":1611655806629},"115-1-4":{"value_id":"3-115-1-4","node_id":3,"class_id":115,"type":"list","genre":"system","instance":1,"index":4,"label":"Test Powerlevel","units":"dB","help":"PowerLevel to use for the Test","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Normal","-1dB","-2dB","-3dB","-4dB","-5dB","-6dB","-7dB","-8dB","-9dB"],"value":"Normal","lastUpdate":1611655806629},"115-1-5":{"value_id":"3-115-1-5","node_id":3,"class_id":115,"type":"short","genre":"system","instance":1,"index":5,"label":"Frame Count","units":"","help":"How Many Messages to send to the Node for the Test","read_only":false,"write_only":false,"min":-32768,"max":32767,"is_polled":false,"value":0,"lastUpdate":1611655806629},"115-1-6":{"value_id":"3-115-1-6","node_id":3,"class_id":115,"type":"button","genre":"system","instance":1,"index":6,"label":"Test","units":"","help":"Perform a PowerLevel Test against the a Node","read_only":false,"write_only":true,"min":0,"max":0,"is_polled":false,"lastUpdate":1611655806629},"115-1-7":{"value_id":"3-115-1-7","node_id":3,"class_id":115,"type":"button","genre":"system","instance":1,"index":7,"label":"Report","units":"","help":"Get the results of the latest PowerLevel Test against a Node","read_only":false,"write_only":true,"min":0,"max":0,"is_polled":false,"lastUpdate":1611655806629},"115-1-8":{"value_id":"3-115-1-8","node_id":3,"class_id":115,"type":"list","genre":"system","instance":1,"index":8,"label":"Test Status","units":"","help":"The Current Status of the last PowerNode Test Executed","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Failed","Success","In Progress"],"value":"Failed","lastUpdate":1611655806630},"115-1-9":{"value_id":"3-115-1-9","node_id":3,"class_id":115,"type":"short","genre":"system","instance":1,"index":9,"label":"Acked Frames","units":"","help":"Number of Messages successfully Acked by the Target Node","read_only":true,"write_only":false,"min":-32768,"max":32767,"is_polled":false,"value":0,"lastUpdate":1611655806630},"128-1-0":{"value_id":"3-128-1-0","node_id":3,"class_id":128,"type":"byte","genre":"user","instance":1,"index":0,"label":"Battery Level","units":"%","help":"Current Battery Level","read_only":true,"write_only":false,"min":0,"max":255,"is_polled":false,"value":100,"lastUpdate":1611655890458},"132-1-0":{"value_id":"3-132-1-0","node_id":3,"class_id":132,"type":"int","genre":"system","instance":1,"index":0,"label":"Wake-up Interval","units":"Seconds","help":"How often the Device will Wake up to check for pending commands","read_only":false,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":86400,"lastUpdate":1611655806630},"132-1-1":{"value_id":"3-132-1-1","node_id":3,"class_id":132,"type":"int","genre":"system","instance":1,"index":1,"label":"Minimum Wake-up Interval","units":"Seconds","help":"Minimum Time in seconds the device will wake up","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":3600,"lastUpdate":1611655806630},"132-1-2":{"value_id":"3-132-1-2","node_id":3,"class_id":132,"type":"int","genre":"system","instance":1,"index":2,"label":"Maximum Wake-up Interval","units":"Seconds","help":"Maximum Time in seconds the device will wake up","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":15728400,"lastUpdate":1611655806630},"132-1-3":{"value_id":"3-132-1-3","node_id":3,"class_id":132,"type":"int","genre":"system","instance":1,"index":3,"label":"Default Wake-up Interval","units":"Seconds","help":"The Default Wake-Up Interval the device will wake up","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":86400,"lastUpdate":1611655806630},"132-1-4":{"value_id":"3-132-1-4","node_id":3,"class_id":132,"type":"int","genre":"system","instance":1,"index":4,"label":"Wake-up Interval Step","units":"Seconds","help":"Step Size on Wake-up interval","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":900,"lastUpdate":1611655806630},"134-1-0":{"value_id":"3-134-1-0","node_id":3,"class_id":134,"type":"string","genre":"system","instance":1,"index":0,"label":"Library Version","units":"","help":"Z-Wave Library Version","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":"3","lastUpdate":1611655806631},"134-1-1":{"value_id":"3-134-1-1","node_id":3,"class_id":134,"type":"string","genre":"system","instance":1,"index":1,"label":"Protocol Version","units":"","help":"Z-Wave Protocol Version","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":"6.07","lastUpdate":1611655806631},"134-1-2":{"value_id":"3-134-1-2","node_id":3,"class_id":134,"type":"string","genre":"system","instance":1,"index":2,"label":"Application Version","units":"","help":"Application Version","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":"1.01","lastUpdate":1611655806631}},"groups":[{"text":"Lifeline","value":1},{"text":"Control","value":2},{"text":"Alarm sensor","value":3},{"text":"Alarm tamper","value":4},{"text":"Lifeline","value":1},{"text":"Control","value":2},{"text":"Alarm sensor","value":3},{"text":"Alarm tamper","value":4}],"neighborns":[1],"ready":true,"available":true,"hassDevices":{},"failed":false,"lastActive":1611656071049,"status":"Alive","basic_device_class":4,"generic_device_class":7,"specific_device_class":1,"version":"1.01"},{"node_id":4,"device_id":"881-7-2","manufacturer":"Aeotec Limited","manufacturerid":"0x0371","product":"ZWA008 Door Window Sensor 7","producttype":"0x0002","productid":"0x0007","type":"Access Control Sensor","values":{"32-1-0":{"value_id":"4-32-1-0","node_id":4,"class_id":32,"type":"byte","genre":"basic","instance":1,"index":0,"label":"Basic","units":"","help":"Basic status of the node","read_only":true,"write_only":false,"min":0,"max":255,"is_polled":false,"value":0,"lastUpdate":1611667140510},"32-1-1":{"value_id":"4-32-1-1","node_id":4,"class_id":32,"type":"byte","genre":"basic","instance":1,"index":1,"label":"Basic Target","units":"","help":"","read_only":true,"write_only":false,"min":0,"max":255,"is_polled":false,"value":0,"lastUpdate":1611667140510},"32-1-2":{"value_id":"4-32-1-2","node_id":4,"class_id":32,"type":"int","genre":"basic","instance":1,"index":2,"label":"Basic Duration","units":"","help":"","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":0,"lastUpdate":1611667140511},"48-1-0":{"value_id":"4-48-1-0","node_id":4,"class_id":48,"type":"bool","genre":"user","instance":1,"index":0,"label":"Sensor","units":"","help":"Binary Sensor State","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":false,"lastUpdate":1611667140511},"91-1-1":{"value_id":"4-91-1-1","node_id":4,"class_id":91,"type":"list","genre":"user","instance":1,"index":1,"label":"Scene 1","units":"","help":"","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Inactive","Pressed 1 Time","Key Released","Key Held down","Pressed 2 Times","Pressed 3 Times","Pressed 4 Times","Pressed 5 Times"],"value":"Inactive","lastUpdate":1611667140511},"91-1-256":{"value_id":"4-91-1-256","node_id":4,"class_id":91,"type":"int","genre":"user","instance":1,"index":256,"label":"Scene Count","units":"","help":"","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":1,"lastUpdate":1611667140511},"91-1-257":{"value_id":"4-91-1-257","node_id":4,"class_id":91,"type":"int","genre":"config","instance":1,"index":257,"label":"Scene Reset Timeout","units":"","help":"","read_only":false,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":1000,"lastUpdate":1611667140511},"94-1-0":{"value_id":"4-94-1-0","node_id":4,"class_id":94,"type":"byte","genre":"system","instance":1,"index":0,"label":"ZWave+ Version","units":"","help":"ZWave+ Version Supported on the Device","read_only":true,"write_only":false,"min":0,"max":255,"is_polled":false,"value":1,"lastUpdate":1611667140511},"94-1-1":{"value_id":"4-94-1-1","node_id":4,"class_id":94,"type":"short","genre":"system","instance":1,"index":1,"label":"InstallerIcon","units":"","help":"Icon File to use for the Installer Application","read_only":true,"write_only":false,"min":-32768,"max":32767,"is_polled":false,"value":3072,"lastUpdate":1611667140512},"94-1-2":{"value_id":"4-94-1-2","node_id":4,"class_id":94,"type":"short","genre":"system","instance":1,"index":2,"label":"UserIcon","units":"","help":"Icon File to use for the User Application","read_only":true,"write_only":false,"min":-32768,"max":32767,"is_polled":false,"value":3078,"lastUpdate":1611667140512},"112-1-1":{"value_id":"4-112-1-1","node_id":4,"class_id":112,"type":"list","genre":"config","instance":1,"index":1,"label":"Operation mode","units":"","help":"Parameter defines device operation mode.","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Built-in hall sensor","External Input"],"value":"Built-in hall sensor","lastUpdate":1611667140512},"112-1-2":{"value_id":"4-112-1-2","node_id":4,"class_id":112,"type":"list","genre":"config","instance":1,"index":2,"label":"Door/Window or alarm status","units":"","help":"Parameter defines state of the sensor when the magnet is close. If the alarm sensor is connected, it determines the output type. Parameter inactive in external button mode (parameter Operation Mode set to 1).","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Closed","Opened"],"value":"Closed","lastUpdate":1611667140512},"112-1-3":{"value_id":"4-112-1-3","node_id":4,"class_id":112,"type":"byte","genre":"config","instance":1,"index":3,"label":"Visual LED indications","units":"","help":"This parameter defines events indicated by the visual LED indicator. Disabling events might extend battery life. Values of parameters may be combined, e.g. 1+2=3 means opening/closing and wake up will be indicated by the visual indicator. 0 - No indications. 1 - Indication of opening/closing status change (input In). 2 - Indication of wake up (1 x click or periodical). 4 - Indication of device tampering.","read_only":false,"write_only":false,"min":0,"max":7,"is_polled":false,"value":7,"lastUpdate":1611667140512},"112-1-4":{"value_id":"4-112-1-4","node_id":4,"class_id":112,"type":"list","genre":"config","instance":1,"index":4,"label":"Range test after double click","units":"","help":"Allows to enable activation of Z-Wave range test with double click of a Tamper Switch 2.","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Disable","Enable"],"value":"Disable","lastUpdate":1611667140512},"112-1-5":{"value_id":"4-112-1-5","node_id":4,"class_id":112,"type":"list","genre":"config","instance":1,"index":5,"label":"2nd Association Group triggers","units":"","help":"Parameter defines events which result in sending On/Off commands to devices added to the 2nd Association Group. These commands are sent alternately to switch the devices On and Off. Commands represent the values of BASIC SET command frames. Parameter is inactive in external dry-contact mode (parameter Operation Mode set to 1).","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Switch after opening and closing","Switch after opening","Switch after closing"],"value":"Switch after opening and closing","lastUpdate":1611667140513},"112-1-6":{"value_id":"4-112-1-6","node_id":4,"class_id":112,"type":"list","genre":"config","instance":1,"index":6,"label":"Commands sent to 2nd Association Group","units":"","help":"Command frames sent to devices added to the 2nd association group.","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["On","Off","On and Off"],"value":"On and Off","lastUpdate":1611667140513},"112-1-7":{"value_id":"4-112-1-7","node_id":4,"class_id":112,"type":"byte","genre":"config","instance":1,"index":7,"label":"Value of ON command frame sent to 2nd Association Group","units":"","help":"The value of 0 turns OFF the device, 255 turns it On. In case of associating the Dimmer or Roller Shutter module, values 1-99 allow to set an Associated device to a specified level.","read_only":false,"write_only":false,"min":0,"max":255,"is_polled":false,"value":255,"lastUpdate":1611667140513},"112-1-8":{"value_id":"4-112-1-8","node_id":4,"class_id":112,"type":"byte","genre":"config","instance":1,"index":8,"label":"Value of OFF command frame sent to 2nd Association Group","units":"","help":"The value of 0 turns OFF the device, 255 turns it On. In case of associating the Dimmer or Roller Shutter module, values 1-99 allow to set an Associated device to a specified level.","read_only":false,"write_only":false,"min":0,"max":255,"is_polled":false,"value":0,"lastUpdate":1611667140513},"112-1-9":{"value_id":"4-112-1-9","node_id":4,"class_id":112,"type":"short","genre":"config","instance":1,"index":9,"label":"Time delay of ON command frame","units":"seconds","help":"Time period after which On command frame will be sent.","read_only":false,"write_only":false,"min":0,"max":32400,"is_polled":false,"value":0,"lastUpdate":1611667140513},"112-1-10":{"value_id":"4-112-1-10","node_id":4,"class_id":112,"type":"short","genre":"config","instance":1,"index":10,"label":"Time delay of OFF command frame","units":"seconds","help":"Time period after which Off command frame will be sent.","read_only":false,"write_only":false,"min":0,"max":32400,"is_polled":false,"value":0,"lastUpdate":1611667140513},"112-1-11":{"value_id":"4-112-1-11","node_id":4,"class_id":112,"type":"short","genre":"config","instance":1,"index":11,"label":"Delay of tamper alarm cancellation","units":"seconds","help":"Time period after which a tamper alarm will be cancelled.","read_only":false,"write_only":false,"min":0,"max":32400,"is_polled":false,"value":5,"lastUpdate":1611667140513},"112-1-12":{"value_id":"4-112-1-12","node_id":4,"class_id":112,"type":"list","genre":"config","instance":1,"index":12,"label":"Reporting tamper alarm cancellation","units":"","help":"Reporting cancellation of tamper alarm to the controller and 5th Association Group.","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Do not send tamper cancellation report","Send tamper cancellation report"],"value":"Send tamper cancellation report","lastUpdate":1611667140514},"112-1-13":{"value_id":"4-112-1-13","node_id":4,"class_id":112,"type":"list","genre":"config","instance":1,"index":13,"label":"Scene activation functionality","units":"","help":"The device can trigger scenes via Dry Input Terminal (external contact) using scene IDs assigned to different events.","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Disable","Enable"],"value":"Disable","lastUpdate":1611667140514},"112-1-14":{"value_id":"4-112-1-14","node_id":4,"class_id":112,"type":"list","genre":"config","instance":1,"index":14,"label":"Tilt Sensor functionality","units":"","help":"The device can report Tilt Window events. This functionality can be disabled if the device is mounted on a door or windows without tilt functionality.To disable tilt detection set the value to 0.","read_only":false,"write_only":false,"min":0,"max":1,"is_polled":false,"values":["Disable","Enable"],"value":"Enable","lastUpdate":1611667140514},"113-1-6":{"value_id":"4-113-1-6","node_id":4,"class_id":113,"type":"list","genre":"user","instance":1,"index":6,"label":"Access Control","units":"","help":"Access Control Alerts","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Clear","Door/Window Open","Door/Window Closed"],"value":"Door/Window Closed","lastUpdate":1611823204023},"113-1-7":{"value_id":"4-113-1-7","node_id":4,"class_id":113,"type":"list","genre":"user","instance":1,"index":7,"label":"Home Security","units":"","help":"Home Security Alerts","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Clear","Tampering -  Cover Removed"],"value":"Clear","lastUpdate":1611667140514},"113-1-256":{"value_id":"4-113-1-256","node_id":4,"class_id":113,"type":"byte","genre":"user","instance":1,"index":256,"label":"Previous Event Cleared","units":"","help":"Previous Event that was sent","read_only":true,"write_only":false,"min":0,"max":255,"is_polled":false,"value":0,"lastUpdate":1611667140514},"114-1-0":{"value_id":"4-114-1-0","node_id":4,"class_id":114,"type":"int","genre":"system","instance":1,"index":0,"label":"Loaded Config Revision","units":"","help":"Revision of the Config file currently loaded","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":1,"lastUpdate":1611667140515},"114-1-1":{"value_id":"4-114-1-1","node_id":4,"class_id":114,"type":"int","genre":"system","instance":1,"index":1,"label":"Config File Revision","units":"","help":"Revision of the Config file on the File System","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":1,"lastUpdate":1611667140515},"114-1-2":{"value_id":"4-114-1-2","node_id":4,"class_id":114,"type":"int","genre":"system","instance":1,"index":2,"label":"Latest Available Config File Revision","units":"","help":"Latest Revision of the Config file available for download","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":1,"lastUpdate":1611667140515},"114-1-4":{"value_id":"4-114-1-4","node_id":4,"class_id":114,"type":"string","genre":"system","instance":1,"index":4,"label":"Serial Number","units":"","help":"Device Serial Number","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":"311306ae67316f4d0001ffff","lastUpdate":1611667140515},"115-1-0":{"value_id":"4-115-1-0","node_id":4,"class_id":115,"type":"list","genre":"system","instance":1,"index":0,"label":"Powerlevel","units":"dB","help":"Output RF PowerLevel","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Normal","-1dB","-2dB","-3dB","-4dB","-5dB","-6dB","-7dB","-8dB","-9dB"],"value":"Normal","lastUpdate":1611667140515},"115-1-1":{"value_id":"4-115-1-1","node_id":4,"class_id":115,"type":"byte","genre":"system","instance":1,"index":1,"label":"Timeout","units":"seconds","help":"Timeout till the PowerLevel is reset to Normal","read_only":false,"write_only":false,"min":0,"max":255,"is_polled":false,"value":0,"lastUpdate":1611667140515},"115-1-2":{"value_id":"4-115-1-2","node_id":4,"class_id":115,"type":"button","genre":"system","instance":1,"index":2,"label":"Set Powerlevel","units":"","help":"Apply the Output PowerLevel and Timeout Values","read_only":false,"write_only":true,"min":0,"max":0,"is_polled":false,"lastUpdate":1611667140515},"115-1-3":{"value_id":"4-115-1-3","node_id":4,"class_id":115,"type":"byte","genre":"system","instance":1,"index":3,"label":"Test Node","units":"","help":"Node to Perform a test against","read_only":false,"write_only":false,"min":0,"max":255,"is_polled":false,"value":0,"lastUpdate":1611667140516},"115-1-4":{"value_id":"4-115-1-4","node_id":4,"class_id":115,"type":"list","genre":"system","instance":1,"index":4,"label":"Test Powerlevel","units":"dB","help":"PowerLevel to use for the Test","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Normal","-1dB","-2dB","-3dB","-4dB","-5dB","-6dB","-7dB","-8dB","-9dB"],"value":"Normal","lastUpdate":1611667140516},"115-1-5":{"value_id":"4-115-1-5","node_id":4,"class_id":115,"type":"short","genre":"system","instance":1,"index":5,"label":"Frame Count","units":"","help":"How Many Messages to send to the Node for the Test","read_only":false,"write_only":false,"min":-32768,"max":32767,"is_polled":false,"value":0,"lastUpdate":1611667140516},"115-1-6":{"value_id":"4-115-1-6","node_id":4,"class_id":115,"type":"button","genre":"system","instance":1,"index":6,"label":"Test","units":"","help":"Perform a PowerLevel Test against the a Node","read_only":false,"write_only":true,"min":0,"max":0,"is_polled":false,"lastUpdate":1611667140516},"115-1-7":{"value_id":"4-115-1-7","node_id":4,"class_id":115,"type":"button","genre":"system","instance":1,"index":7,"label":"Report","units":"","help":"Get the results of the latest PowerLevel Test against a Node","read_only":false,"write_only":true,"min":0,"max":0,"is_polled":false,"lastUpdate":1611667140516},"115-1-8":{"value_id":"4-115-1-8","node_id":4,"class_id":115,"type":"list","genre":"system","instance":1,"index":8,"label":"Test Status","units":"","help":"The Current Status of the last PowerNode Test Executed","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Failed","Success","In Progress"],"value":"Failed","lastUpdate":1611667140516},"115-1-9":{"value_id":"4-115-1-9","node_id":4,"class_id":115,"type":"short","genre":"system","instance":1,"index":9,"label":"Acked Frames","units":"","help":"Number of Messages successfully Acked by the Target Node","read_only":true,"write_only":false,"min":-32768,"max":32767,"is_polled":false,"value":0,"lastUpdate":1611667140516},"128-1-0":{"value_id":"4-128-1-0","node_id":4,"class_id":128,"type":"byte","genre":"user","instance":1,"index":0,"label":"Battery Level","units":"%","help":"Current Battery Level","read_only":true,"write_only":false,"min":0,"max":255,"is_polled":false,"value":100,"lastUpdate":1611763775844},"132-1-0":{"value_id":"4-132-1-0","node_id":4,"class_id":132,"type":"int","genre":"system","instance":1,"index":0,"label":"Wake-up Interval","units":"Seconds","help":"How often the Device will Wake up to check for pending commands","read_only":false,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":86400,"lastUpdate":1611667140517},"132-1-1":{"value_id":"4-132-1-1","node_id":4,"class_id":132,"type":"int","genre":"system","instance":1,"index":1,"label":"Minimum Wake-up Interval","units":"Seconds","help":"Minimum Time in seconds the device will wake up","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":3600,"lastUpdate":1611667140517},"132-1-2":{"value_id":"4-132-1-2","node_id":4,"class_id":132,"type":"int","genre":"system","instance":1,"index":2,"label":"Maximum Wake-up Interval","units":"Seconds","help":"Maximum Time in seconds the device will wake up","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":15728400,"lastUpdate":1611667140517},"132-1-3":{"value_id":"4-132-1-3","node_id":4,"class_id":132,"type":"int","genre":"system","instance":1,"index":3,"label":"Default Wake-up Interval","units":"Seconds","help":"The Default Wake-Up Interval the device will wake up","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":86400,"lastUpdate":1611667140517},"132-1-4":{"value_id":"4-132-1-4","node_id":4,"class_id":132,"type":"int","genre":"system","instance":1,"index":4,"label":"Wake-up Interval Step","units":"Seconds","help":"Step Size on Wake-up interval","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":900,"lastUpdate":1611667140517},"134-1-0":{"value_id":"4-134-1-0","node_id":4,"class_id":134,"type":"string","genre":"system","instance":1,"index":0,"label":"Library Version","units":"","help":"Z-Wave Library Version","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":"3","lastUpdate":1611667140517},"134-1-1":{"value_id":"4-134-1-1","node_id":4,"class_id":134,"type":"string","genre":"system","instance":1,"index":1,"label":"Protocol Version","units":"","help":"Z-Wave Protocol Version","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":"6.07","lastUpdate":1611667140518},"134-1-2":{"value_id":"4-134-1-2","node_id":4,"class_id":134,"type":"string","genre":"system","instance":1,"index":2,"label":"Application Version","units":"","help":"Application Version","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":"1.01","lastUpdate":1611667140518}},"groups":[{"text":"Lifeline","value":1},{"text":"Control","value":2},{"text":"Alarm sensor","value":3},{"text":"Alarm tamper","value":4},{"text":"Lifeline","value":1},{"text":"Control","value":2},{"text":"Alarm sensor","value":3},{"text":"Alarm tamper","value":4}],"neighborns":[1],"ready":true,"available":true,"hassDevices":{},"failed":false,"lastActive":1611823204024,"status":"Sleep","basic_device_class":4,"generic_device_class":7,"specific_device_class":1,"version":"1.01"},{"node_id":5,"device_id":"2-373-5","manufacturer":"Danfoss","manufacturerid":"0x0002","product":"Devolo Home Control Radiator Thermostat","producttype":"0x0005","productid":"0x0175","type":"Setpoint Thermostat","values":{"49-1-1":{"value_id":"5-49-1-1","node_id":5,"class_id":49,"type":"decimal","genre":"user","instance":1,"index":1,"label":"Air Temperature","units":"C","help":"Air Temperature Sensor Value","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":20,"lastUpdate":1611828459120},"49-1-256":{"value_id":"5-49-1-256","node_id":5,"class_id":49,"type":"list","genre":"system","instance":1,"index":256,"label":"Air Temperature Units","units":"","help":"Air Temperature Sensor Available Units","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"values":[],"value":"","lastUpdate":1611824111518},"67-1-1":{"value_id":"5-67-1-1","node_id":5,"class_id":67,"type":"decimal","genre":"user","instance":1,"index":1,"label":"Heating 1","units":"C","help":"Set the Thermostat Setpoint Heating 1","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"value":19,"lastUpdate":1611828459005},"70-1-1":{"value_id":"5-70-1-1","node_id":5,"class_id":70,"type":"schedule","genre":"user","instance":1,"index":1,"label":"Monday","units":"","help":"Schedule for Monday","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"lastUpdate":1611824111519},"70-1-2":{"value_id":"5-70-1-2","node_id":5,"class_id":70,"type":"schedule","genre":"user","instance":1,"index":2,"label":"Tuesday","units":"","help":"Schedule for Tuesday","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"lastUpdate":1611824111519},"70-1-3":{"value_id":"5-70-1-3","node_id":5,"class_id":70,"type":"schedule","genre":"user","instance":1,"index":3,"label":"Wednesday","units":"","help":"Schedule for Wednesday","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"lastUpdate":1611824111519},"70-1-4":{"value_id":"5-70-1-4","node_id":5,"class_id":70,"type":"schedule","genre":"user","instance":1,"index":4,"label":"Thursday","units":"","help":"Schedule for Thursday","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"lastUpdate":1611824111519},"70-1-5":{"value_id":"5-70-1-5","node_id":5,"class_id":70,"type":"schedule","genre":"user","instance":1,"index":5,"label":"Friday","units":"","help":"Schedule for Friday","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"lastUpdate":1611824111519},"70-1-6":{"value_id":"5-70-1-6","node_id":5,"class_id":70,"type":"schedule","genre":"user","instance":1,"index":6,"label":"Saturday","units":"","help":"Schedule for Saturday","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"lastUpdate":1611824111520},"70-1-7":{"value_id":"5-70-1-7","node_id":5,"class_id":70,"type":"schedule","genre":"user","instance":1,"index":7,"label":"Sunday","units":"","help":"Schedule for Sunday","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"lastUpdate":1611824111520},"70-1-8":{"value_id":"5-70-1-8","node_id":5,"class_id":70,"type":"list","genre":"user","instance":1,"index":8,"label":"Override State","units":"","help":"Override Schedule","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["None","Temporary","Permanent"],"value":"None","lastUpdate":1611828459062},"70-1-9":{"value_id":"5-70-1-9","node_id":5,"class_id":70,"type":"byte","genre":"user","instance":1,"index":9,"label":"Override Setback","units":"","help":"Override Setback","read_only":false,"write_only":false,"min":0,"max":255,"is_polled":false,"value":127,"lastUpdate":1611828459064},"114-1-0":{"value_id":"5-114-1-0","node_id":5,"class_id":114,"type":"int","genre":"system","instance":1,"index":0,"label":"Loaded Config Revision","units":"","help":"Revision of the Config file currently loaded","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":10,"lastUpdate":1611824111520},"114-1-1":{"value_id":"5-114-1-1","node_id":5,"class_id":114,"type":"int","genre":"system","instance":1,"index":1,"label":"Config File Revision","units":"","help":"Revision of the Config file on the File System","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":10,"lastUpdate":1611824111521},"114-1-2":{"value_id":"5-114-1-2","node_id":5,"class_id":114,"type":"int","genre":"system","instance":1,"index":2,"label":"Latest Available Config File Revision","units":"","help":"Latest Revision of the Config file available for download","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":10,"lastUpdate":1611824111521},"117-1-0":{"value_id":"5-117-1-0","node_id":5,"class_id":117,"type":"list","genre":"system","instance":1,"index":0,"label":"Protection","units":"","help":"Protect a device against unintentional control","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Unprotected","Protection by Sequence","No Operation Possible"],"value":"Unprotected","lastUpdate":1611824111521},"128-1-0":{"value_id":"5-128-1-0","node_id":5,"class_id":128,"type":"byte","genre":"user","instance":1,"index":0,"label":"Battery Level","units":"%","help":"Current Battery Level","read_only":true,"write_only":false,"min":0,"max":255,"is_polled":false,"value":69,"lastUpdate":1611828458950},"129-1-0":{"value_id":"5-129-1-0","node_id":5,"class_id":129,"type":"list","genre":"user","instance":1,"index":0,"label":"Day","units":"","help":"Day of Week","read_only":false,"write_only":false,"min":0,"max":0,"is_polled":false,"values":["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],"value":"Saturday","lastUpdate":1611824111521},"129-1-1":{"value_id":"5-129-1-1","node_id":5,"class_id":129,"type":"byte","genre":"user","instance":1,"index":1,"label":"Hour","units":"","help":"Hour","read_only":false,"write_only":false,"min":0,"max":255,"is_polled":false,"value":17,"lastUpdate":1611824111522},"129-1-2":{"value_id":"5-129-1-2","node_id":5,"class_id":129,"type":"byte","genre":"user","instance":1,"index":2,"label":"Minute","units":"","help":"Minute","read_only":false,"write_only":false,"min":0,"max":255,"is_polled":false,"value":10,"lastUpdate":1611824111522},"132-1-0":{"value_id":"5-132-1-0","node_id":5,"class_id":132,"type":"int","genre":"system","instance":1,"index":0,"label":"Wake-up Interval","units":"Seconds","help":"How often the Device will Wake up to check for pending commands","read_only":false,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":300,"lastUpdate":1611824111522},"132-1-1":{"value_id":"5-132-1-1","node_id":5,"class_id":132,"type":"int","genre":"system","instance":1,"index":1,"label":"Minimum Wake-up Interval","units":"Seconds","help":"Minimum Time in seconds the device will wake up","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":60,"lastUpdate":1611824111522},"132-1-2":{"value_id":"5-132-1-2","node_id":5,"class_id":132,"type":"int","genre":"system","instance":1,"index":2,"label":"Maximum Wake-up Interval","units":"Seconds","help":"Maximum Time in seconds the device will wake up","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":1800,"lastUpdate":1611824111522},"132-1-3":{"value_id":"5-132-1-3","node_id":5,"class_id":132,"type":"int","genre":"system","instance":1,"index":3,"label":"Default Wake-up Interval","units":"Seconds","help":"The Default Wake-Up Interval the device will wake up","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":300,"lastUpdate":1611824111522},"132-1-4":{"value_id":"5-132-1-4","node_id":5,"class_id":132,"type":"int","genre":"system","instance":1,"index":4,"label":"Wake-up Interval Step","units":"Seconds","help":"Step Size on Wake-up interval","read_only":true,"write_only":false,"min":-2147483648,"max":2147483647,"is_polled":false,"value":60,"lastUpdate":1611824111523},"134-1-0":{"value_id":"5-134-1-0","node_id":5,"class_id":134,"type":"string","genre":"system","instance":1,"index":0,"label":"Library Version","units":"","help":"Z-Wave Library Version","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":"6","lastUpdate":1611824111523},"134-1-1":{"value_id":"5-134-1-1","node_id":5,"class_id":134,"type":"string","genre":"system","instance":1,"index":1,"label":"Protocol Version","units":"","help":"Z-Wave Protocol Version","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":"3.67","lastUpdate":1611824111523},"134-1-2":{"value_id":"5-134-1-2","node_id":5,"class_id":134,"type":"string","genre":"system","instance":1,"index":2,"label":"Application Version","units":"","help":"Application Version","read_only":true,"write_only":false,"min":0,"max":0,"is_polled":false,"value":"1.00","lastUpdate":1611824111523}},"groups":[],"neighborns":[1],"ready":true,"available":true,"hassDevices":{},"failed":false,"lastActive":1611828460206,"status":"Sleep","basic_device_class":4,"generic_device_class":8,"specific_device_class":4,"version":"1.00"}],"args":[]}`
		token = zwavemqttclient.Publish("zwave2mqtt/_CLIENTS/ZWAVE_GATEWAY-SENERGY/api/getNodes", 2, false, updatePayload)
		if token.Wait() && token.Error() != nil {
			t.Error(token.Error())
			return
		}

		<-deviceInfoDone.Done()
		if err := deviceInfoDone.Err(); err != nil && err != context.Canceled {
			t.Error("no device-info received:", err)
		}
	}
}

//dependes on previous call of checkUpdateResult
func checkUpdateResultAfterRemove(connector *connector.Connector, mgwmqttclient paho.Client, zwavemqttclient paho.Client, deleteMissingDevices bool, deleteHusks bool) func(t *testing.T) {
	return func(t *testing.T) {
		//check update
		deviceInfoTopic := "device-manager/device/test-connector-id"
		deviceInfoDone, allDeviceInfosReceived := context.WithTimeout(context.Background(), 10*time.Second)
		wg1 := sync.WaitGroup{}
		wg1.Add(1)
		wg2 := sync.WaitGroup{}
		wg2.Add(1)
		wg3 := sync.WaitGroup{}
		if deleteHusks {
			wg3.Add(1)
		}
		go func() {
			wg1.Wait()
			wg2.Wait()
			wg3.Wait()
			allDeviceInfosReceived()
		}()
		token := mgwmqttclient.Subscribe(deviceInfoTopic, 2, func(_ paho.Client, message paho.Message) {
			expectedMsg1 := `{"method":"set","device_id":"test-connector-id:3","data":{"name":"Test","state":"online","device_type":"test-device-type"}}`
			expectedMsg2 := `{"method":"set","device_id":"test-connector-id:4","data":{"name":"ZWA008 Door Window Sensor 7 (4)","state":"offline","device_type":"test-device-type"}}`
			if deleteMissingDevices {
				expectedMsg2 = `{"method":"delete","device_id":"test-connector-id:4","data":{"name":"","state":"","device_type":""}}`
			}
			expectedMsg3 := `{"method":"delete","device_id":"test-connector-id:2","data":{"name":"","state":"","device_type":""}}`

			switch string(message.Payload()) {
			case expectedMsg1:
				wg1.Done()
			case expectedMsg2:
				wg2.Done()
			case expectedMsg3:
				if deleteHusks {
					wg3.Done()
				}
				if !deleteHusks {
					t.Error("unexpected husk delete")
				}
			default:
				t.Error(string(message.Payload()))
				return
			}
		})
		if token.Wait() && token.Error() != nil {
			t.Error(token.Error())
			return
		}
		defer mgwmqttclient.Unsubscribe(deviceInfoTopic)

		//send update
		//
		/*
			node 4 replaced with
				{
				 "node_id":4,
				 "type":"",
				 "status":"Removed",
				 "name":"",
				 "loc":"",
				 "failed":true,
				 "values":{
				 }
			  }
		*/
		updatePayload := `{"args":[],"message":"Success zwave api call","result":[{"failed":true,"loc":"","name":"","node_id":0,"status":"","type":"Main controller","values":{}},{"available":true,"basic_device_class":2,"device_id":"134-90-1","failed":false,"generic_device_class":2,"groups":[],"hassDevices":{},"lastActive":1611654895645,"manufacturer":"AEON Labs","manufacturerid":"0x0086","neighborns":[3,4,5],"node_id":1,"product":"ZW090 Z-Stick Gen5 EU","productid":"0x005a","producttype":"0x0001","ready":true,"specific_device_class":1,"status":"Alive","type":"Static PC Controller","values":{"112-1-220":{"class_id":112,"genre":"config","help":"1~10, other= ignore. A total of 10 levels, level 1 as the weak output power, and so on, 10 for most output power level","index":220,"instance":1,"is_polled":false,"label":"Configuration of the RF power level","lastUpdate":1611654895647,"max":10,"min":1,"node_id":1,"read_only":false,"type":"list","units":"","value":"10","value_id":"1-112-1-220","values":["1","2","3","4","5","6","7","8","9","10"],"write_only":false},"112-1-242":{"class_id":112,"genre":"config","help":"","index":242,"instance":1,"is_polled":false,"label":"Security network enabled","lastUpdate":1611654895647,"max":1,"min":0,"node_id":1,"read_only":false,"type":"list","units":"","value":"Disable","value_id":"1-112-1-242","values":["Disable","Enable"],"write_only":false},"112-1-243":{"class_id":112,"genre":"config","help":"","index":243,"instance":1,"is_polled":false,"label":"Security network key","lastUpdate":1611654895647,"max":2147483647,"min":-2147483648,"node_id":1,"read_only":false,"type":"int","units":"","value":0,"value_id":"1-112-1-243","write_only":false},"112-1-252":{"class_id":112,"genre":"config","help":"Lock/ unlock all configuration parameters","index":252,"instance":1,"is_polled":false,"label":"Lock/Unlock Configuration","lastUpdate":1611654895647,"max":1,"min":0,"node_id":1,"read_only":false,"type":"list","units":"","value":"Unlock","value_id":"1-112-1-252","values":["Unlock","Lock"],"write_only":false},"112-1-255":{"class_id":112,"genre":"config","help":"Reset to the default configuration","index":255,"instance":1,"is_polled":false,"label":"Reset default configuration","lastUpdate":1611654895647,"max":2147483647,"min":-2147483648,"node_id":1,"read_only":false,"type":"int","units":"","value":0,"value_id":"1-112-1-255","write_only":true},"112-1-81":{"class_id":112,"genre":"config","help":"Enable/Disable LED indicator when plugged in","index":81,"instance":1,"is_polled":false,"label":"LED indicator configuration","lastUpdate":1611654895646,"max":1,"min":0,"node_id":1,"read_only":false,"type":"list","units":"","value":"Enable","value_id":"1-112-1-81","values":["Disable","Enable"],"write_only":false},"114-1-0":{"class_id":114,"genre":"system","help":"Revision of the Config file currently loaded","index":0,"instance":1,"is_polled":false,"label":"Loaded Config Revision","lastUpdate":1611654895648,"max":2147483647,"min":-2147483648,"node_id":1,"read_only":true,"type":"int","units":"","value":6,"value_id":"1-114-1-0","write_only":false},"114-1-1":{"class_id":114,"genre":"system","help":"Revision of the Config file on the File System","index":1,"instance":1,"is_polled":false,"label":"Config File Revision","lastUpdate":1611654895648,"max":2147483647,"min":-2147483648,"node_id":1,"read_only":true,"type":"int","units":"","value":6,"value_id":"1-114-1-1","write_only":false},"114-1-2":{"class_id":114,"genre":"system","help":"Latest Revision of the Config file available for download","index":2,"instance":1,"is_polled":false,"label":"Latest Available Config File Revision","lastUpdate":1611654895648,"max":2147483647,"min":-2147483648,"node_id":1,"read_only":true,"type":"int","units":"","value":6,"value_id":"1-114-1-2","write_only":false},"32-1-0":{"class_id":32,"genre":"basic","help":"Basic status of the node","index":0,"instance":1,"is_polled":false,"label":"Basic","lastUpdate":1611654895645,"max":255,"min":0,"node_id":1,"read_only":true,"type":"byte","units":"","value":0,"value_id":"1-32-1-0","write_only":false},"32-1-1":{"class_id":32,"genre":"basic","help":"","index":1,"instance":1,"is_polled":false,"label":"Basic Target","lastUpdate":1611654895646,"max":255,"min":0,"node_id":1,"read_only":true,"type":"byte","units":"","value":0,"value_id":"1-32-1-1","write_only":false},"32-1-2":{"class_id":32,"genre":"basic","help":"","index":2,"instance":1,"is_polled":false,"label":"Basic Duration","lastUpdate":1611654895646,"max":2147483647,"min":-2147483648,"node_id":1,"read_only":true,"type":"int","units":"","value":0,"value_id":"1-32-1-2","write_only":false}}},{"failed":true,"loc":"","name":"","node_id":2,"status":"Removed","type":"","values":{}},{"available":true,"basic_device_class":4,"device_id":"881-7-2","failed":false,"generic_device_class":7,"groups":[{"text":"Lifeline","value":1},{"text":"Control","value":2},{"text":"Alarm sensor","value":3},{"text":"Alarm tamper","value":4},{"text":"Lifeline","value":1},{"text":"Control","value":2},{"text":"Alarm sensor","value":3},{"text":"Alarm tamper","value":4}],"hassDevices":{},"lastActive":1611656071049,"manufacturer":"Aeotec Limited","manufacturerid":"0x0371","name":"Test","neighborns":[1],"node_id":3,"product":"ZWA008 Door Window Sensor 7","productid":"0x0007","producttype":"0x0002","ready":true,"specific_device_class":1,"status":"Alive","type":"Access Control Sensor","values":{"112-1-1":{"class_id":112,"genre":"config","help":"Parameter defines device operation mode.","index":1,"instance":1,"is_polled":false,"label":"Operation mode","lastUpdate":1611655806626,"max":1,"min":0,"node_id":3,"read_only":false,"type":"list","units":"","value":"Built-in hall sensor","value_id":"3-112-1-1","values":["Built-in hall sensor","External Input"],"write_only":false},"112-1-10":{"class_id":112,"genre":"config","help":"Time period after which Off command frame will be sent.","index":10,"instance":1,"is_polled":false,"label":"Time delay of OFF command frame","lastUpdate":1611655806627,"max":32400,"min":0,"node_id":3,"read_only":false,"type":"short","units":"seconds","value":0,"value_id":"3-112-1-10","write_only":false},"112-1-11":{"class_id":112,"genre":"config","help":"Time period after which a tamper alarm will be cancelled.","index":11,"instance":1,"is_polled":false,"label":"Delay of tamper alarm cancellation","lastUpdate":1611655806627,"max":32400,"min":0,"node_id":3,"read_only":false,"type":"short","units":"seconds","value":5,"value_id":"3-112-1-11","write_only":false},"112-1-12":{"class_id":112,"genre":"config","help":"Reporting cancellation of tamper alarm to the controller and 5th Association Group.","index":12,"instance":1,"is_polled":false,"label":"Reporting tamper alarm cancellation","lastUpdate":1611655806627,"max":1,"min":0,"node_id":3,"read_only":false,"type":"list","units":"","value":"Send tamper cancellation report","value_id":"3-112-1-12","values":["Do not send tamper cancellation report","Send tamper cancellation report"],"write_only":false},"112-1-13":{"class_id":112,"genre":"config","help":"The device can trigger scenes via Dry Input Terminal (external contact) using scene IDs assigned to different events.","index":13,"instance":1,"is_polled":false,"label":"Scene activation functionality","lastUpdate":1611655806627,"max":1,"min":0,"node_id":3,"read_only":false,"type":"list","units":"","value":"Disable","value_id":"3-112-1-13","values":["Disable","Enable"],"write_only":false},"112-1-14":{"class_id":112,"genre":"config","help":"The device can report Tilt Window events. This functionality can be disabled if the device is mounted on a door or windows without tilt functionality.To disable tilt detection set the value to 0.","index":14,"instance":1,"is_polled":false,"label":"Tilt Sensor functionality","lastUpdate":1611655806627,"max":1,"min":0,"node_id":3,"read_only":false,"type":"list","units":"","value":"Enable","value_id":"3-112-1-14","values":["Disable","Enable"],"write_only":false},"112-1-2":{"class_id":112,"genre":"config","help":"Parameter defines state of the sensor when the magnet is close. If the alarm sensor is connected, it determines the output type. Parameter inactive in external button mode (parameter Operation Mode set to 1).","index":2,"instance":1,"is_polled":false,"label":"Door/Window or alarm status","lastUpdate":1611655806626,"max":1,"min":0,"node_id":3,"read_only":false,"type":"list","units":"","value":"Closed","value_id":"3-112-1-2","values":["Closed","Opened"],"write_only":false},"112-1-3":{"class_id":112,"genre":"config","help":"This parameter defines events indicated by the visual LED indicator. Disabling events might extend battery life. Values of parameters may be combined, e.g. 1+2=3 means opening/closing and wake up will be indicated by the visual indicator. 0 - No indications. 1 - Indication of opening/closing status change (input In). 2 - Indication of wake up (1 x click or periodical). 4 - Indication of device tampering.","index":3,"instance":1,"is_polled":false,"label":"Visual LED indications","lastUpdate":1611655806626,"max":7,"min":0,"node_id":3,"read_only":false,"type":"byte","units":"","value":7,"value_id":"3-112-1-3","write_only":false},"112-1-4":{"class_id":112,"genre":"config","help":"Allows to enable activation of Z-Wave range test with double click of a Tamper Switch 2.","index":4,"instance":1,"is_polled":false,"label":"Range test after double click","lastUpdate":1611655806626,"max":1,"min":0,"node_id":3,"read_only":false,"type":"list","units":"","value":"Disable","value_id":"3-112-1-4","values":["Disable","Enable"],"write_only":false},"112-1-5":{"class_id":112,"genre":"config","help":"Parameter defines events which result in sending On/Off commands to devices added to the 2nd Association Group. These commands are sent alternately to switch the devices On and Off. Commands represent the values of BASIC SET command frames. Parameter is inactive in external dry-contact mode (parameter Operation Mode set to 1).","index":5,"instance":1,"is_polled":false,"label":"2nd Association Group triggers","lastUpdate":1611655806626,"max":1,"min":0,"node_id":3,"read_only":false,"type":"list","units":"","value":"Switch after opening and closing","value_id":"3-112-1-5","values":["Switch after opening and closing","Switch after opening","Switch after closing"],"write_only":false},"112-1-6":{"class_id":112,"genre":"config","help":"Command frames sent to devices added to the 2nd association group.","index":6,"instance":1,"is_polled":false,"label":"Commands sent to 2nd Association Group","lastUpdate":1611655806626,"max":1,"min":0,"node_id":3,"read_only":false,"type":"list","units":"","value":"On and Off","value_id":"3-112-1-6","values":["On","Off","On and Off"],"write_only":false},"112-1-7":{"class_id":112,"genre":"config","help":"The value of 0 turns OFF the device, 255 turns it On. In case of associating the Dimmer or Roller Shutter module, values 1-99 allow to set an Associated device to a specified level.","index":7,"instance":1,"is_polled":false,"label":"Value of ON command frame sent to 2nd Association Group","lastUpdate":1611655806626,"max":255,"min":0,"node_id":3,"read_only":false,"type":"byte","units":"","value":255,"value_id":"3-112-1-7","write_only":false},"112-1-8":{"class_id":112,"genre":"config","help":"The value of 0 turns OFF the device, 255 turns it On. In case of associating the Dimmer or Roller Shutter module, values 1-99 allow to set an Associated device to a specified level.","index":8,"instance":1,"is_polled":false,"label":"Value of OFF command frame sent to 2nd Association Group","lastUpdate":1611655806627,"max":255,"min":0,"node_id":3,"read_only":false,"type":"byte","units":"","value":0,"value_id":"3-112-1-8","write_only":false},"112-1-9":{"class_id":112,"genre":"config","help":"Time period after which On command frame will be sent.","index":9,"instance":1,"is_polled":false,"label":"Time delay of ON command frame","lastUpdate":1611655806627,"max":32400,"min":0,"node_id":3,"read_only":false,"type":"short","units":"seconds","value":0,"value_id":"3-112-1-9","write_only":false},"113-1-256":{"class_id":113,"genre":"user","help":"Previous Event that was sent","index":256,"instance":1,"is_polled":false,"label":"Previous Event Cleared","lastUpdate":1611655806628,"max":255,"min":0,"node_id":3,"read_only":true,"type":"byte","units":"","value":3,"value_id":"3-113-1-256","write_only":false},"113-1-6":{"class_id":113,"genre":"user","help":"Access Control Alerts","index":6,"instance":1,"is_polled":false,"label":"Access Control","lastUpdate":1611656048685,"max":0,"min":0,"node_id":3,"read_only":true,"type":"list","units":"","value":"Door/Window Closed","value_id":"3-113-1-6","values":["Clear","Door/Window Open","Door/Window Closed"],"write_only":false},"113-1-7":{"class_id":113,"genre":"user","help":"Home Security Alerts","index":7,"instance":1,"is_polled":false,"label":"Home Security","lastUpdate":1611655890618,"max":0,"min":0,"node_id":3,"read_only":true,"type":"list","units":"","value":"Tampering -  Cover Removed","value_id":"3-113-1-7","values":["Clear","Tampering -  Cover Removed"],"write_only":false},"114-1-0":{"class_id":114,"genre":"system","help":"Revision of the Config file currently loaded","index":0,"instance":1,"is_polled":false,"label":"Loaded Config Revision","lastUpdate":1611655806628,"max":2147483647,"min":-2147483648,"node_id":3,"read_only":true,"type":"int","units":"","value":1,"value_id":"3-114-1-0","write_only":false},"114-1-1":{"class_id":114,"genre":"system","help":"Revision of the Config file on the File System","index":1,"instance":1,"is_polled":false,"label":"Config File Revision","lastUpdate":1611655806628,"max":2147483647,"min":-2147483648,"node_id":3,"read_only":true,"type":"int","units":"","value":1,"value_id":"3-114-1-1","write_only":false},"114-1-2":{"class_id":114,"genre":"system","help":"Latest Revision of the Config file available for download","index":2,"instance":1,"is_polled":false,"label":"Latest Available Config File Revision","lastUpdate":1611655806628,"max":2147483647,"min":-2147483648,"node_id":3,"read_only":true,"type":"int","units":"","value":1,"value_id":"3-114-1-2","write_only":false},"114-1-4":{"class_id":114,"genre":"system","help":"Device Serial Number","index":4,"instance":1,"is_polled":false,"label":"Serial Number","lastUpdate":1611655806628,"max":0,"min":0,"node_id":3,"read_only":true,"type":"string","units":"","value":"311306ae4dac6ffa0001ffff","value_id":"3-114-1-4","write_only":false},"115-1-0":{"class_id":115,"genre":"system","help":"Output RF PowerLevel","index":0,"instance":1,"is_polled":false,"label":"Powerlevel","lastUpdate":1611655806629,"max":0,"min":0,"node_id":3,"read_only":false,"type":"list","units":"dB","value":"Normal","value_id":"3-115-1-0","values":["Normal","-1dB","-2dB","-3dB","-4dB","-5dB","-6dB","-7dB","-8dB","-9dB"],"write_only":false},"115-1-1":{"class_id":115,"genre":"system","help":"Timeout till the PowerLevel is reset to Normal","index":1,"instance":1,"is_polled":false,"label":"Timeout","lastUpdate":1611655806629,"max":255,"min":0,"node_id":3,"read_only":false,"type":"byte","units":"seconds","value":0,"value_id":"3-115-1-1","write_only":false},"115-1-2":{"class_id":115,"genre":"system","help":"Apply the Output PowerLevel and Timeout Values","index":2,"instance":1,"is_polled":false,"label":"Set Powerlevel","lastUpdate":1611655806629,"max":0,"min":0,"node_id":3,"read_only":false,"type":"button","units":"","value_id":"3-115-1-2","write_only":true},"115-1-3":{"class_id":115,"genre":"system","help":"Node to Perform a test against","index":3,"instance":1,"is_polled":false,"label":"Test Node","lastUpdate":1611655806629,"max":255,"min":0,"node_id":3,"read_only":false,"type":"byte","units":"","value":0,"value_id":"3-115-1-3","write_only":false},"115-1-4":{"class_id":115,"genre":"system","help":"PowerLevel to use for the Test","index":4,"instance":1,"is_polled":false,"label":"Test Powerlevel","lastUpdate":1611655806629,"max":0,"min":0,"node_id":3,"read_only":false,"type":"list","units":"dB","value":"Normal","value_id":"3-115-1-4","values":["Normal","-1dB","-2dB","-3dB","-4dB","-5dB","-6dB","-7dB","-8dB","-9dB"],"write_only":false},"115-1-5":{"class_id":115,"genre":"system","help":"How Many Messages to send to the Node for the Test","index":5,"instance":1,"is_polled":false,"label":"Frame Count","lastUpdate":1611655806629,"max":32767,"min":-32768,"node_id":3,"read_only":false,"type":"short","units":"","value":0,"value_id":"3-115-1-5","write_only":false},"115-1-6":{"class_id":115,"genre":"system","help":"Perform a PowerLevel Test against the a Node","index":6,"instance":1,"is_polled":false,"label":"Test","lastUpdate":1611655806629,"max":0,"min":0,"node_id":3,"read_only":false,"type":"button","units":"","value_id":"3-115-1-6","write_only":true},"115-1-7":{"class_id":115,"genre":"system","help":"Get the results of the latest PowerLevel Test against a Node","index":7,"instance":1,"is_polled":false,"label":"Report","lastUpdate":1611655806629,"max":0,"min":0,"node_id":3,"read_only":false,"type":"button","units":"","value_id":"3-115-1-7","write_only":true},"115-1-8":{"class_id":115,"genre":"system","help":"The Current Status of the last PowerNode Test Executed","index":8,"instance":1,"is_polled":false,"label":"Test Status","lastUpdate":1611655806630,"max":0,"min":0,"node_id":3,"read_only":true,"type":"list","units":"","value":"Failed","value_id":"3-115-1-8","values":["Failed","Success","In Progress"],"write_only":false},"115-1-9":{"class_id":115,"genre":"system","help":"Number of Messages successfully Acked by the Target Node","index":9,"instance":1,"is_polled":false,"label":"Acked Frames","lastUpdate":1611655806630,"max":32767,"min":-32768,"node_id":3,"read_only":true,"type":"short","units":"","value":0,"value_id":"3-115-1-9","write_only":false},"128-1-0":{"class_id":128,"genre":"user","help":"Current Battery Level","index":0,"instance":1,"is_polled":false,"label":"Battery Level","lastUpdate":1611655890458,"max":255,"min":0,"node_id":3,"read_only":true,"type":"byte","units":"%","value":100,"value_id":"3-128-1-0","write_only":false},"132-1-0":{"class_id":132,"genre":"system","help":"How often the Device will Wake up to check for pending commands","index":0,"instance":1,"is_polled":false,"label":"Wake-up Interval","lastUpdate":1611655806630,"max":2147483647,"min":-2147483648,"node_id":3,"read_only":false,"type":"int","units":"Seconds","value":86400,"value_id":"3-132-1-0","write_only":false},"132-1-1":{"class_id":132,"genre":"system","help":"Minimum Time in seconds the device will wake up","index":1,"instance":1,"is_polled":false,"label":"Minimum Wake-up Interval","lastUpdate":1611655806630,"max":2147483647,"min":-2147483648,"node_id":3,"read_only":true,"type":"int","units":"Seconds","value":3600,"value_id":"3-132-1-1","write_only":false},"132-1-2":{"class_id":132,"genre":"system","help":"Maximum Time in seconds the device will wake up","index":2,"instance":1,"is_polled":false,"label":"Maximum Wake-up Interval","lastUpdate":1611655806630,"max":2147483647,"min":-2147483648,"node_id":3,"read_only":true,"type":"int","units":"Seconds","value":15728400,"value_id":"3-132-1-2","write_only":false},"132-1-3":{"class_id":132,"genre":"system","help":"The Default Wake-Up Interval the device will wake up","index":3,"instance":1,"is_polled":false,"label":"Default Wake-up Interval","lastUpdate":1611655806630,"max":2147483647,"min":-2147483648,"node_id":3,"read_only":true,"type":"int","units":"Seconds","value":86400,"value_id":"3-132-1-3","write_only":false},"132-1-4":{"class_id":132,"genre":"system","help":"Step Size on Wake-up interval","index":4,"instance":1,"is_polled":false,"label":"Wake-up Interval Step","lastUpdate":1611655806630,"max":2147483647,"min":-2147483648,"node_id":3,"read_only":true,"type":"int","units":"Seconds","value":900,"value_id":"3-132-1-4","write_only":false},"134-1-0":{"class_id":134,"genre":"system","help":"Z-Wave Library Version","index":0,"instance":1,"is_polled":false,"label":"Library Version","lastUpdate":1611655806631,"max":0,"min":0,"node_id":3,"read_only":true,"type":"string","units":"","value":"3","value_id":"3-134-1-0","write_only":false},"134-1-1":{"class_id":134,"genre":"system","help":"Z-Wave Protocol Version","index":1,"instance":1,"is_polled":false,"label":"Protocol Version","lastUpdate":1611655806631,"max":0,"min":0,"node_id":3,"read_only":true,"type":"string","units":"","value":"6.07","value_id":"3-134-1-1","write_only":false},"134-1-2":{"class_id":134,"genre":"system","help":"Application Version","index":2,"instance":1,"is_polled":false,"label":"Application Version","lastUpdate":1611655806631,"max":0,"min":0,"node_id":3,"read_only":true,"type":"string","units":"","value":"1.01","value_id":"3-134-1-2","write_only":false},"32-1-0":{"class_id":32,"genre":"basic","help":"Basic status of the node","index":0,"instance":1,"is_polled":false,"label":"Basic","lastUpdate":1611655806624,"max":255,"min":0,"node_id":3,"read_only":true,"type":"byte","units":"","value":0,"value_id":"3-32-1-0","write_only":false},"32-1-1":{"class_id":32,"genre":"basic","help":"","index":1,"instance":1,"is_polled":false,"label":"Basic Target","lastUpdate":1611655806624,"max":255,"min":0,"node_id":3,"read_only":true,"type":"byte","units":"","value":0,"value_id":"3-32-1-1","write_only":false},"32-1-2":{"class_id":32,"genre":"basic","help":"","index":2,"instance":1,"is_polled":false,"label":"Basic Duration","lastUpdate":1611655806624,"max":2147483647,"min":-2147483648,"node_id":3,"read_only":true,"type":"int","units":"","value":0,"value_id":"3-32-1-2","write_only":false},"48-1-0":{"class_id":48,"genre":"user","help":"Binary Sensor State","index":0,"instance":1,"is_polled":false,"label":"Sensor","lastUpdate":1611655806625,"max":0,"min":0,"node_id":3,"read_only":true,"type":"bool","units":"","value":false,"value_id":"3-48-1-0","write_only":false},"91-1-1":{"class_id":91,"genre":"user","help":"","index":1,"instance":1,"is_polled":false,"label":"Scene 1","lastUpdate":1611655806625,"max":0,"min":0,"node_id":3,"read_only":true,"type":"list","units":"","value":"Inactive","value_id":"3-91-1-1","values":["Inactive","Pressed 1 Time","Key Released","Key Held down","Pressed 2 Times","Pressed 3 Times","Pressed 4 Times","Pressed 5 Times"],"write_only":false},"91-1-256":{"class_id":91,"genre":"user","help":"","index":256,"instance":1,"is_polled":false,"label":"Scene Count","lastUpdate":1611655806625,"max":2147483647,"min":-2147483648,"node_id":3,"read_only":true,"type":"int","units":"","value":1,"value_id":"3-91-1-256","write_only":false},"91-1-257":{"class_id":91,"genre":"config","help":"","index":257,"instance":1,"is_polled":false,"label":"Scene Reset Timeout","lastUpdate":1611655806625,"max":2147483647,"min":-2147483648,"node_id":3,"read_only":false,"type":"int","units":"","value":1000,"value_id":"3-91-1-257","write_only":false},"94-1-0":{"class_id":94,"genre":"system","help":"ZWave+ Version Supported on the Device","index":0,"instance":1,"is_polled":false,"label":"ZWave+ Version","lastUpdate":1611655806625,"max":255,"min":0,"node_id":3,"read_only":true,"type":"byte","units":"","value":1,"value_id":"3-94-1-0","write_only":false},"94-1-1":{"class_id":94,"genre":"system","help":"Icon File to use for the Installer Application","index":1,"instance":1,"is_polled":false,"label":"InstallerIcon","lastUpdate":1611655806625,"max":32767,"min":-32768,"node_id":3,"read_only":true,"type":"short","units":"","value":3072,"value_id":"3-94-1-1","write_only":false},"94-1-2":{"class_id":94,"genre":"system","help":"Icon File to use for the User Application","index":2,"instance":1,"is_polled":false,"label":"UserIcon","lastUpdate":1611655806625,"max":32767,"min":-32768,"node_id":3,"read_only":true,"type":"short","units":"","value":3078,"value_id":"3-94-1-2","write_only":false}},"version":"1.01"},{"failed":true,"loc":"","name":"","node_id":4,"status":"Removed","type":"","values":{}},{"available":true,"basic_device_class":4,"device_id":"2-373-5","failed":false,"generic_device_class":8,"groups":[],"hassDevices":{},"lastActive":1611828460206,"manufacturer":"Danfoss","manufacturerid":"0x0002","neighborns":[1],"node_id":5,"product":"Devolo Home Control Radiator Thermostat","productid":"0x0175","producttype":"0x0005","ready":true,"specific_device_class":4,"status":"Sleep","type":"Setpoint Thermostat","values":{"114-1-0":{"class_id":114,"genre":"system","help":"Revision of the Config file currently loaded","index":0,"instance":1,"is_polled":false,"label":"Loaded Config Revision","lastUpdate":1611824111520,"max":2147483647,"min":-2147483648,"node_id":5,"read_only":true,"type":"int","units":"","value":10,"value_id":"5-114-1-0","write_only":false},"114-1-1":{"class_id":114,"genre":"system","help":"Revision of the Config file on the File System","index":1,"instance":1,"is_polled":false,"label":"Config File Revision","lastUpdate":1611824111521,"max":2147483647,"min":-2147483648,"node_id":5,"read_only":true,"type":"int","units":"","value":10,"value_id":"5-114-1-1","write_only":false},"114-1-2":{"class_id":114,"genre":"system","help":"Latest Revision of the Config file available for download","index":2,"instance":1,"is_polled":false,"label":"Latest Available Config File Revision","lastUpdate":1611824111521,"max":2147483647,"min":-2147483648,"node_id":5,"read_only":true,"type":"int","units":"","value":10,"value_id":"5-114-1-2","write_only":false},"117-1-0":{"class_id":117,"genre":"system","help":"Protect a device against unintentional control","index":0,"instance":1,"is_polled":false,"label":"Protection","lastUpdate":1611824111521,"max":0,"min":0,"node_id":5,"read_only":false,"type":"list","units":"","value":"Unprotected","value_id":"5-117-1-0","values":["Unprotected","Protection by Sequence","No Operation Possible"],"write_only":false},"128-1-0":{"class_id":128,"genre":"user","help":"Current Battery Level","index":0,"instance":1,"is_polled":false,"label":"Battery Level","lastUpdate":1611828458950,"max":255,"min":0,"node_id":5,"read_only":true,"type":"byte","units":"%","value":69,"value_id":"5-128-1-0","write_only":false},"129-1-0":{"class_id":129,"genre":"user","help":"Day of Week","index":0,"instance":1,"is_polled":false,"label":"Day","lastUpdate":1611824111521,"max":0,"min":0,"node_id":5,"read_only":false,"type":"list","units":"","value":"Saturday","value_id":"5-129-1-0","values":["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"],"write_only":false},"129-1-1":{"class_id":129,"genre":"user","help":"Hour","index":1,"instance":1,"is_polled":false,"label":"Hour","lastUpdate":1611824111522,"max":255,"min":0,"node_id":5,"read_only":false,"type":"byte","units":"","value":17,"value_id":"5-129-1-1","write_only":false},"129-1-2":{"class_id":129,"genre":"user","help":"Minute","index":2,"instance":1,"is_polled":false,"label":"Minute","lastUpdate":1611824111522,"max":255,"min":0,"node_id":5,"read_only":false,"type":"byte","units":"","value":10,"value_id":"5-129-1-2","write_only":false},"132-1-0":{"class_id":132,"genre":"system","help":"How often the Device will Wake up to check for pending commands","index":0,"instance":1,"is_polled":false,"label":"Wake-up Interval","lastUpdate":1611824111522,"max":2147483647,"min":-2147483648,"node_id":5,"read_only":false,"type":"int","units":"Seconds","value":300,"value_id":"5-132-1-0","write_only":false},"132-1-1":{"class_id":132,"genre":"system","help":"Minimum Time in seconds the device will wake up","index":1,"instance":1,"is_polled":false,"label":"Minimum Wake-up Interval","lastUpdate":1611824111522,"max":2147483647,"min":-2147483648,"node_id":5,"read_only":true,"type":"int","units":"Seconds","value":60,"value_id":"5-132-1-1","write_only":false},"132-1-2":{"class_id":132,"genre":"system","help":"Maximum Time in seconds the device will wake up","index":2,"instance":1,"is_polled":false,"label":"Maximum Wake-up Interval","lastUpdate":1611824111522,"max":2147483647,"min":-2147483648,"node_id":5,"read_only":true,"type":"int","units":"Seconds","value":1800,"value_id":"5-132-1-2","write_only":false},"132-1-3":{"class_id":132,"genre":"system","help":"The Default Wake-Up Interval the device will wake up","index":3,"instance":1,"is_polled":false,"label":"Default Wake-up Interval","lastUpdate":1611824111522,"max":2147483647,"min":-2147483648,"node_id":5,"read_only":true,"type":"int","units":"Seconds","value":300,"value_id":"5-132-1-3","write_only":false},"132-1-4":{"class_id":132,"genre":"system","help":"Step Size on Wake-up interval","index":4,"instance":1,"is_polled":false,"label":"Wake-up Interval Step","lastUpdate":1611824111523,"max":2147483647,"min":-2147483648,"node_id":5,"read_only":true,"type":"int","units":"Seconds","value":60,"value_id":"5-132-1-4","write_only":false},"134-1-0":{"class_id":134,"genre":"system","help":"Z-Wave Library Version","index":0,"instance":1,"is_polled":false,"label":"Library Version","lastUpdate":1611824111523,"max":0,"min":0,"node_id":5,"read_only":true,"type":"string","units":"","value":"6","value_id":"5-134-1-0","write_only":false},"134-1-1":{"class_id":134,"genre":"system","help":"Z-Wave Protocol Version","index":1,"instance":1,"is_polled":false,"label":"Protocol Version","lastUpdate":1611824111523,"max":0,"min":0,"node_id":5,"read_only":true,"type":"string","units":"","value":"3.67","value_id":"5-134-1-1","write_only":false},"134-1-2":{"class_id":134,"genre":"system","help":"Application Version","index":2,"instance":1,"is_polled":false,"label":"Application Version","lastUpdate":1611824111523,"max":0,"min":0,"node_id":5,"read_only":true,"type":"string","units":"","value":"1.00","value_id":"5-134-1-2","write_only":false},"49-1-1":{"class_id":49,"genre":"user","help":"Air Temperature Sensor Value","index":1,"instance":1,"is_polled":false,"label":"Air Temperature","lastUpdate":1611828459120,"max":0,"min":0,"node_id":5,"read_only":true,"type":"decimal","units":"C","value":20,"value_id":"5-49-1-1","write_only":false},"49-1-256":{"class_id":49,"genre":"system","help":"Air Temperature Sensor Available Units","index":256,"instance":1,"is_polled":false,"label":"Air Temperature Units","lastUpdate":1611824111518,"max":0,"min":0,"node_id":5,"read_only":false,"type":"list","units":"","value":"","value_id":"5-49-1-256","values":[],"write_only":false},"67-1-1":{"class_id":67,"genre":"user","help":"Set the Thermostat Setpoint Heating 1","index":1,"instance":1,"is_polled":false,"label":"Heating 1","lastUpdate":1611828459005,"max":0,"min":0,"node_id":5,"read_only":false,"type":"decimal","units":"C","value":19,"value_id":"5-67-1-1","write_only":false},"70-1-1":{"class_id":70,"genre":"user","help":"Schedule for Monday","index":1,"instance":1,"is_polled":false,"label":"Monday","lastUpdate":1611824111519,"max":0,"min":0,"node_id":5,"read_only":false,"type":"schedule","units":"","value_id":"5-70-1-1","write_only":false},"70-1-2":{"class_id":70,"genre":"user","help":"Schedule for Tuesday","index":2,"instance":1,"is_polled":false,"label":"Tuesday","lastUpdate":1611824111519,"max":0,"min":0,"node_id":5,"read_only":false,"type":"schedule","units":"","value_id":"5-70-1-2","write_only":false},"70-1-3":{"class_id":70,"genre":"user","help":"Schedule for Wednesday","index":3,"instance":1,"is_polled":false,"label":"Wednesday","lastUpdate":1611824111519,"max":0,"min":0,"node_id":5,"read_only":false,"type":"schedule","units":"","value_id":"5-70-1-3","write_only":false},"70-1-4":{"class_id":70,"genre":"user","help":"Schedule for Thursday","index":4,"instance":1,"is_polled":false,"label":"Thursday","lastUpdate":1611824111519,"max":0,"min":0,"node_id":5,"read_only":false,"type":"schedule","units":"","value_id":"5-70-1-4","write_only":false},"70-1-5":{"class_id":70,"genre":"user","help":"Schedule for Friday","index":5,"instance":1,"is_polled":false,"label":"Friday","lastUpdate":1611824111519,"max":0,"min":0,"node_id":5,"read_only":false,"type":"schedule","units":"","value_id":"5-70-1-5","write_only":false},"70-1-6":{"class_id":70,"genre":"user","help":"Schedule for Saturday","index":6,"instance":1,"is_polled":false,"label":"Saturday","lastUpdate":1611824111520,"max":0,"min":0,"node_id":5,"read_only":false,"type":"schedule","units":"","value_id":"5-70-1-6","write_only":false},"70-1-7":{"class_id":70,"genre":"user","help":"Schedule for Sunday","index":7,"instance":1,"is_polled":false,"label":"Sunday","lastUpdate":1611824111520,"max":0,"min":0,"node_id":5,"read_only":false,"type":"schedule","units":"","value_id":"5-70-1-7","write_only":false},"70-1-8":{"class_id":70,"genre":"user","help":"Override Schedule","index":8,"instance":1,"is_polled":false,"label":"Override State","lastUpdate":1611828459062,"max":0,"min":0,"node_id":5,"read_only":false,"type":"list","units":"","value":"None","value_id":"5-70-1-8","values":["None","Temporary","Permanent"],"write_only":false},"70-1-9":{"class_id":70,"genre":"user","help":"Override Setback","index":9,"instance":1,"is_polled":false,"label":"Override Setback","lastUpdate":1611828459064,"max":255,"min":0,"node_id":5,"read_only":false,"type":"byte","units":"","value":127,"value_id":"5-70-1-9","write_only":false}},"version":"1.00"}],"success":true}`
		token = zwavemqttclient.Publish("zwave2mqtt/_CLIENTS/ZWAVE_GATEWAY-SENERGY/api/getNodes", 2, false, updatePayload)
		if token.Wait() && token.Error() != nil {
			t.Error(token.Error())
			return
		}

		<-deviceInfoDone.Done()
		if err := deviceInfoDone.Err(); err != nil && err != context.Canceled {
			t.Error("no device-info received:", err)
		}
	}
}
